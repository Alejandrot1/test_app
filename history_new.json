[
  {
    "role": "user",
    "content": "Create a Flask web app with a home page, login system, and basic styling."
  },
  {
    "role": "assistant",
    "content": "--- file: backend/main.py ---\nfrom flask import Flask, render_template, redirect, url_for, request, session\nfrom flask_sqlalchemy import SQLAlchemy\nfrom werkzeug.security import generate_password_hash, check_password_hash\n\napp = Flask(__name__)\napp.secret_key = 'your_secret_key'\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.db'\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(150), nullable=False, unique=True)\n    password = db.Column(db.String(150), nullable=False)\n\n@app.route('/')\ndef home():\n    return render_template('home.html')\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        user = User.query.filter_by(username=username).first()\n        if user and check_password_hash(user.password, password):\n            session['user_id'] = user.id\n            return redirect(url_for('home'))\n    return render_template('login.html')\n\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = generate_password_hash(request.form['password'], method='sha256')\n        new_user = User(username=username, password=password)\n        db.session.add(new_user)\n        db.session.commit()\n        return redirect(url_for('login'))\n    return render_template('register.html')\n\nif __name__ == '__main__':\n    db.create_all()\n    app.run(debug=True)\n\n--- file: backend/requirements.txt ---\nFlask\nFlask-SQLAlchemy\nWerkzeug\n\n--- file: backend/templates/home.html ---\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n</head>\n<body>\n    <h1>Welcome to the Home Page</h1>\n    <a href=\"{{ url_for('login') }}\">Login</a>\n    <a href=\"{{ url_for('register') }}\">Register</a>\n</body>\n</html>\n\n--- file: backend/templates/login.html ---\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n</head>\n<body>\n    <h1>Login</h1>\n    <form method=\"POST\">\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" required>\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required>\n        <button type=\"submit\">Login</button>\n    </form>\n    <a href=\"{{ url_for('register') }}\">Register</a>\n</body>\n</html>\n\n--- file: backend/templates/register.html ---\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Register</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n</head>\n<body>\n    <h1>Register</h1>\n    <form method=\"POST\">\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" required>\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required>\n        <button type=\"submit\">Register</button>\n    </form>\n    <a href=\"{{ url_for('login') }}\">Login</a>\n</body>\n</html>\n\n--- file: backend/static/style.css ---\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    margin: 0;\n    padding: 20px;\n}\n\nh1 {\n    color: #333;\n}\n\nform {\n    margin: 20px 0;\n}\n\ninput {\n    display: block;\n    margin: 10px 0;\n    padding: 10px;\n    width: 100%;\n}\n\nbutton {\n    padding: 10px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: #0056b3;\n}\n\n--- file: Dockerfile ---\nFROM python:3.11-slim\n\nWORKDIR /app\n\nCOPY backend/requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY backend/ .\n\nCMD [\"python\", \"main.py\"]\n\n--- file: README.md ---\n# Flask Web App\n\n## Build and Run\n\n1. Build the Docker image:\n   ```\n   docker build -t flask-web-app .\n   ```\n\n2. Run the Docker container:\n   ```\n   docker run -p 5000:5000 flask-web-app\n   ```\n\n3. Access the app at `http://localhost:5000`.\n\n## Database Setup\n\n- The app uses SQLite for user management. The database will be created automatically on the first run.\n\n--- file: firebase.json ---\n{\n  \"hosting\": {\n    \"rewrites\": [\n      {\n        \"source\": \"/api/**\",\n        \"run\": {\n          \"serviceId\": \"your-run-service\",\n          \"region\": \"us-central1\"\n        }\n      },\n      {\n        \"source\": \"**\",\n        \"destination\": \"/index.html\"\n      }\n    ]\n  }\n}"
  }
]